/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as VideosDownloadIndexImport } from './routes/videos/download/index'
import { Route as GamesLolIndexImport } from './routes/games/lol/index'
import { Route as DevEnvIndexImport } from './routes/dev/env/index'
import { Route as DevEnvExecCommandCommandImport } from './routes/dev/env/exec-command.$command'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VideosDownloadIndexRoute = VideosDownloadIndexImport.update({
  id: '/videos/download/',
  path: '/videos/download/',
  getParentRoute: () => rootRoute,
} as any)

const GamesLolIndexRoute = GamesLolIndexImport.update({
  id: '/games/lol/',
  path: '/games/lol/',
  getParentRoute: () => rootRoute,
} as any)

const DevEnvIndexRoute = DevEnvIndexImport.update({
  id: '/dev/env/',
  path: '/dev/env/',
  getParentRoute: () => rootRoute,
} as any)

const DevEnvExecCommandCommandRoute = DevEnvExecCommandCommandImport.update({
  id: '/dev/env/exec-command/$command',
  path: '/dev/env/exec-command/$command',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dev/env/': {
      id: '/dev/env/'
      path: '/dev/env'
      fullPath: '/dev/env'
      preLoaderRoute: typeof DevEnvIndexImport
      parentRoute: typeof rootRoute
    }
    '/games/lol/': {
      id: '/games/lol/'
      path: '/games/lol'
      fullPath: '/games/lol'
      preLoaderRoute: typeof GamesLolIndexImport
      parentRoute: typeof rootRoute
    }
    '/videos/download/': {
      id: '/videos/download/'
      path: '/videos/download'
      fullPath: '/videos/download'
      preLoaderRoute: typeof VideosDownloadIndexImport
      parentRoute: typeof rootRoute
    }
    '/dev/env/exec-command/$command': {
      id: '/dev/env/exec-command/$command'
      path: '/dev/env/exec-command/$command'
      fullPath: '/dev/env/exec-command/$command'
      preLoaderRoute: typeof DevEnvExecCommandCommandImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dev/env': typeof DevEnvIndexRoute
  '/games/lol': typeof GamesLolIndexRoute
  '/videos/download': typeof VideosDownloadIndexRoute
  '/dev/env/exec-command/$command': typeof DevEnvExecCommandCommandRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dev/env': typeof DevEnvIndexRoute
  '/games/lol': typeof GamesLolIndexRoute
  '/videos/download': typeof VideosDownloadIndexRoute
  '/dev/env/exec-command/$command': typeof DevEnvExecCommandCommandRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dev/env/': typeof DevEnvIndexRoute
  '/games/lol/': typeof GamesLolIndexRoute
  '/videos/download/': typeof VideosDownloadIndexRoute
  '/dev/env/exec-command/$command': typeof DevEnvExecCommandCommandRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dev/env'
    | '/games/lol'
    | '/videos/download'
    | '/dev/env/exec-command/$command'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dev/env'
    | '/games/lol'
    | '/videos/download'
    | '/dev/env/exec-command/$command'
  id:
    | '__root__'
    | '/'
    | '/dev/env/'
    | '/games/lol/'
    | '/videos/download/'
    | '/dev/env/exec-command/$command'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DevEnvIndexRoute: typeof DevEnvIndexRoute
  GamesLolIndexRoute: typeof GamesLolIndexRoute
  VideosDownloadIndexRoute: typeof VideosDownloadIndexRoute
  DevEnvExecCommandCommandRoute: typeof DevEnvExecCommandCommandRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DevEnvIndexRoute: DevEnvIndexRoute,
  GamesLolIndexRoute: GamesLolIndexRoute,
  VideosDownloadIndexRoute: VideosDownloadIndexRoute,
  DevEnvExecCommandCommandRoute: DevEnvExecCommandCommandRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dev/env/",
        "/games/lol/",
        "/videos/download/",
        "/dev/env/exec-command/$command"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dev/env/": {
      "filePath": "dev/env/index.tsx"
    },
    "/games/lol/": {
      "filePath": "games/lol/index.tsx"
    },
    "/videos/download/": {
      "filePath": "videos/download/index.tsx"
    },
    "/dev/env/exec-command/$command": {
      "filePath": "dev/env/exec-command.$command.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
